#! /usr/bin/env node
/*
 Copyright (c) 2016
  Marthem Obliviate v.0.1
  Author Michael Antonius (laguerdo@yahoo.com)
  Compiled with Obliviate Engine
*/
    try{var userArgs=process.argv.slice(2),execFileSync=require("child_process").execFileSync,spawnSync=require("child_process").spawnSync,fs=require("fs"),path=require("path"),chokidar=require("chokidar"),color=require("node-colorify"),captureError="",config="./oblv.json",r=require("readline"),readLine=r.createInterface({input:process.stdin,output:process.stdout});if("init"!=userArgs[0]){if(!fs.existsSync(config))throw Error("[CLI Error] oblv.json couldn't be found");try{config=JSON.parse(fs.readFileSync(config,"utf8"))}catch(e){throw Error("[oblv.json] Parse error: "+e.message)}}var oblv_exc=process.cwd(),normalize=function(e){return e.replace(oblv_exc,"").replace(/(\/|\\)/g,path.sep)},escapeRegExp=function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},reCache={},makeRe=function(e,r){var o=e+r;if(reCache[o])return reCache[o];var c=!1;"!"===e[0]&&(c=!0,e=e.slice(1)),e=escapeRegExp(e).replace(/\\\*/g,".*"),/(\/|\\)/.test(e.slice(-2))&&(e=e.slice(0,-2)),c&&r&&(e="(?!"+e+")");var i=new RegExp("^"+e+"$","i");return i.negated=c,reCache[o]=i,i},exclude=config.exclude;switch(typeof exclude){case"string":exclude=[exclude];break;case"number":exclude=[exclude+""];break;case"object":break;default:exclude=[]}exclude.push("/oblv.json"),exclude.forEach(function(e,r){exclude[r]=makeRe(normalize(e))});var compileProject=function(e){if(captureError=spawnSync(path.basename(config["php-cli"]),["-l",e],{cwd:path.dirname(config["php-cli"])}),captureError=(captureError.stdout+"").trim(),/^Parse error/i.test(captureError))fs.createReadStream(e).pipe(fs.createWriteStream(e.replace(/\.oblv\.php$/,".php"))),console.error("[PHP] "+captureError);else try{execFileSync(config["php-cli"],["-f",__dirname+"/obliviate.php",e,e.replace(/\.oblv\.php$/,".php")])}catch(e){throw Error("[Internal error] "+e.message)}captureError=""};if(0<userArgs.length)switch(userArgs[0].toLowerCase()){case"auto":try{execFileSync(config["php-cli"],["-r",'echo "obliviate";'])}catch(e){throw Error("[CLI Error] A valid PHP Executable needed")}var Spinner=require("cli-spinner").Spinner,spinner=new Spinner("%s Searching files *.oblv.php ...");spinner.setSpinnerString("|/-\\"),spinner.start();var fired={},crypto=require("crypto"),wildcard={},key=0,watcher=chokidar.watch(oblv_exc),render=function(e,r){if(0==/\.oblv\.php$/i.test(e))return!1;var o=crypto.createHash("md5").update(e).digest("hex");if(void 0==fired[o])fired[o]={time:Date.now(),count:1};else{if(!(500<Date.now()-fired[o].time))return;fired[o].time=Date.now(),fired[o].count+=1}if(captureError=spawnSync(path.basename(config["php-cli"]),["-l",e],{cwd:path.dirname(config["php-cli"])}),captureError=(captureError.stdout+"").trim(),r||console.log(color.colorItSync(e,{fColor:"green"})+" changed. Compiling ..."),/^Parse error/i.test(captureError))fs.createReadStream(e).pipe(fs.createWriteStream(e.replace(/\.oblv\.php$/i,".php"))),console.error(color.colorItSync("[PHP] "+captureError,{bColor:"red",fColor:"white"}));else try{execFileSync(config["php-cli"],["-f",__dirname+"/obliviate.php",e,e.replace(/\.oblv\.php$/i,".php")]),r||console.log("Compiled")}catch(e){throw Error("[Internal error] "+e.message)}captureError="",void 0==fired[o]&&3<fired[o].count&&delete fired[o]};watcher.on("add",function(e){render(e,!0)}).on("change",function(e){render(e)}),console.log(color.styleItSync("Watching ...",["bold"])),spinner.stop(!0);break;case"compile":try{execFileSync(config["php-cli"],["-r",'echo "obliviate";'])}catch(e){throw Error("[CLI Error] A valid PHP Executable needed")}var glob=require("glob-all"),auto_search=glob.sync([oblv_exc+"/**/*.oblv.php"]);(spinner=new(Spinner=require("cli-spinner").Spinner)("%s Searching files *.oblv.php ...")).setSpinnerString("|/-\\"),spinner.start(),auto_search.forEach(function(e){compileProject(e)}),spinner.stop(!0),console.log("Obliviate succesfully compiled your project");break;case"init":var load_config="./oblv.json",run=!0,oblv_init=function(e){try{var r=fs.existsSync(load_config)?JSON.parse(fs.readFileSync(load_config,"utf8")):{};o="",readLine.question("Enter a valid {PHP} Executable File path: ",function(e){o=e.trim();try{execFileSync(o,["-r",'echo "obliviate";']),r["php-cli"]=o,fs.writeFileSync("./oblv.json",JSON.stringify(r,null,1))}catch(e){console.log(color.colorItSync(o+" isn't a valid PHP Executable File",{bColor:"red",fColor:"white"})),oblv_init()}readLine.close()})}catch(e){r={};try{var o="";readLine.question("Enter a valid {PHP} Executable File path: ",function(e){o=e.trim(),readLine.close()}),execFileSync(o,["-r",'echo "obliviate";']),r["php-cli"]=o,fs.writeFileSync("./oblv.json",JSON.stringify(r,null,1))}catch(e){console.error(color.colorItSync(o+" isn't a valid PHP Executable File",{bColor:"red",fColor:"white"})),oblv_init()}}};oblv_init();break;default:console.log("Use `oblv init` to initialize and `oblv compile` to compile your project")}else{try{execFileSync(config["php-cli"],["-r",'echo "obliviate";'])}catch(e){throw Error("[CLI Error] A valid PHP Executable needed")}compileProject(oblv_exc,oblv_exc),console.log("Obliviate succesfully compiled your project")}}catch(e){console.log(e.message)}